using DCC;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;

namespace DGC.Tests
{
    [TestClass]
    public class RevocationTests
    {
        [TestMethod]
        public void ComputeSignatureHash_EC_Success()
        {
            var decert

            var decode = new DCC.GreenCertificateDecoder();
            var cwt = decode.Decode(decert);

            var signatureHash = RevocationUtils.ComputeSignatureHash(cwt);
            
            Assert.AreEqual("s7QddDF+SZ6oSMRNeCss+Q==", Convert.ToBase64String(signatureHash));
        }

        [TestMethod]
        public void ComputeUCIHash__Success()
        {
            var decert

            var decode = new DCC.GreenCertificateDecoder();
            var cwt = decode.Decode(decert);

            var signatureHash = RevocationUtils.ComputeUCIHash(cwt);

            Assert.AreEqual("P4nd4fPW4wjQOqv8VWdxBw==", Convert.ToBase64String(signatureHash));
        }
    }
}
